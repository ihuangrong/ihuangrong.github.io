<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>如何在一台计算机上同时配置gitlab和github</title>
    <url>/2020/05/06/how-to-setup-gitlab-and-github-on-the-same-computer/</url>
    <content><![CDATA[<p>学校交作业用的是Gitlab，平时自己写小项目都用Github。在没有使用本方法前，一直都是笨笨的切换账户。现在可以在同一台电脑上同时配置二者啦，而且拉取或上传库的时候，会自动识别是Gitlab还是Github。6！</p>
<a id="more"></a>

<p>首先你必须装好了Git，不管你此时Git里的账户是Gitlab或者Github，都不影响。下面开始配置：</p>
<p><strong>00 准备</strong></p>
<ul>
<li>学校或公司给的Gitlab账号的<em>邮箱地址</em></li>
<li>学校或公司给的Gitlab账号的<em>账号名称</em></li>
<li>你自己的Github账号的<em>地址</em>（不是邮箱，长这样:github.com/账号名称）</li>
<li>你自己的Github账号的<em>邮箱地址</em></li>
<li>你自己的Github账号的<em>账号名称</em></li>
</ul>
<p><strong>01 生成SSH密钥</strong><br>首先打开文件管理器，到位置”C:/Users/用户名/.ssh/“，一会Gitlab和Github生成的公钥密钥都会在这里。步骤如下：</p>
<ol>
<li>打开Gitbash，这里我们先配置Gitlab，写入命令<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ssh-keygen -t rsa -C <span class="string">"Gitlab账号的邮箱地址"</span></span></span><br></pre></td></tr></table></figure>
此时肉眼可见文件夹中生成了对应的Gitlab密钥的私钥id_rsa和公钥id_rsa_pub。学过安全的同学都知道我们接下来要用来配置的是公钥id_rsa_pub</li>
<li>配置Gitlab公钥id_rsa_pub中的内容到学校或公司的Gitlab上<br>打开Gitlab -&gt; 点击自己的头像 -&gt; 下拉菜单有个Settings点进去 -&gt; 点击左侧菜单中的SSH Keys -&gt; 点击绿色按钮Add Key -&gt; 用记事本打开公钥文件，全选复制 -&gt; Title是对密钥的描述，随便起名称；复制的内容粘贴到多行文本框 -&gt; 确定<br>完了你就能看到下方显示的Your SSH keys，配置成功！</li>
<li>接下来我们配置Github，写入命令<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ssh-keygen -t rsa -C <span class="string">"Github账号的地址（不是邮箱）"</span><span class="string">" -f ~/.ssh/github_rsa</span></span></span><br></pre></td></tr></table></figure>
回车后，同样在文件夹中看到了生成的Github私钥github_rsa和公钥github_rsa.pub</li>
<li>配置Github公钥github_rsa.pub中的内容到自己的Github上<br>过程和上述Gitlab公钥配置一毛一样。</li>
<li>两边公钥都分别配置成功后，继续在密钥生成的这个位置文件夹中，创建一个config文件，没有后缀，用记事本打开，添加如下配置：<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> gitlab</span></span><br><span class="line">Host gitlab</span><br><span class="line">    HostName gitlab.xxx.com #填学校或公司的gitlab的Host</span><br><span class="line">    User git #不变</span><br><span class="line">    IdentityFile ~/.ssh/id_rsa #这里是Gitlab对应的私钥</span><br><span class="line"><span class="meta">#</span><span class="bash"> githab</span></span><br><span class="line">Host github.com</span><br><span class="line">    HostName github.com #不变</span><br><span class="line">    User git #不变</span><br><span class="line">    IdentityFile ~/.ssh/github_rsa #这里是Github对应的私钥</span><br></pre></td></tr></table></figure>
保存文件</li>
</ol>
<p><strong>02 测试连接</strong><br>同样在该文件夹下（密钥生成的位置）打开Gitbash运行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ssh -T git@hostName</span></span><br></pre></td></tr></table></figure>
<p>测试SSH Key对Gitlab和Github的连接</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">... MINGW64 ~/.ssh</span><br><span class="line"><span class="meta">$</span><span class="bash"> ssh -T git@gitlab</span></span><br><span class="line">Welcome to GitLab, xxx!</span><br><span class="line"></span><br><span class="line">... MINGW64 ~/.ssh</span><br><span class="line"><span class="meta">$</span><span class="bash"> ssh -T git@github.com</span></span><br><span class="line">Hi xxx! You've successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure>
<p>出现上面的结果说明连接成功，否则退回去看看哪里弄错了。</p>
<p><strong>03 配置Git仓库</strong><br>Git的config文件记录了用户账号的基本信息，这里我们通过在不同级别的仓库配置中配置不同的账号，来访问不同的远程仓库。换句话说，Gitlab学校账户我常用，就把global级别的账户配置成Gitlab的账号；Github更多是私人项目，就在单个的本地仓库中配置Github账号。</p>
<p>Config文件通常有三个位置：</p>
<ul>
<li>system（系统级别）：<br>位于Windows下Git的安装目录，包含了适用于系统所有用户和所有库的值，通过‘git config –system’配置。</li>
<li>global（用户级别）:<br>位于~/.gitconfig，具体到电脑的当前用户，通过传递‘git config –global’配置。</li>
<li>local（仓库级别）：<br>位于.git/config，特定指向某个单一的库。<br>以上每个级别的值的配置都会重写前一个级别的值。</li>
</ul>
<p>因为常用，global级别的git配置我把它设置为学校的Gitlab账号：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git config --global user.name <span class="string">'username'</span> <span class="comment">#Gitlab账号名称</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git config --global user.email <span class="string">'xxx@student.xxx.com'</span> <span class="comment">#Gitlab账号邮箱</span></span></span><br></pre></td></tr></table></figure>
<p>打开某个个人项目的文件夹，该单独库配置local级别的用户，也就是个人的Github的账号。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git config --<span class="built_in">local</span> user.name <span class="string">'username'</span> <span class="comment">#Github账号名称</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git config --<span class="built_in">local</span> user.email <span class="string">'xxx@xxx.com'</span> <span class="comment">#Github账号邮箱</span></span></span><br></pre></td></tr></table></figure>
<p>之后在该仓库下拉取Github的代码，会通过配置的Host自动识别到<a href="mailto:git@github.com">git@github.com</a>。</p>
<p><strong>技术总结</strong><br>至此，在同一台计算机上同时配置Gitlab与Github就成功了！基本想法是通过密钥的不同连接不同的账户，另外通过git config不同级别配置不同的Git账户，以后拉取代码库的时候，本地仓库下会自动识别到<a href="mailto:git@github.com">git@github.com</a>，其他仓库都会识别到<a href="mailto:git@gitlab.xxx.com">git@gitlab.xxx.com</a>。</p>
<p><strong>参考文献</strong><br>感谢：<a href="https://segmentfault.com/a/1190000014626841" target="_blank" rel="noopener">https://segmentfault.com/a/1190000014626841</a></p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>每周德语语法：语序句型</title>
    <url>/2020/05/07/deutschlernen-grammatik-satz/</url>
    <content><![CDATA[<div class="note default">
            <ol><li>陈述句：der Aussagesatz</li><li>句框结构：Satzklammer</li></ol>
          </div>

<a id="more"></a>

<p>das Beispiel  -e  案例；例子<br>jm. D ein Beispiel geben  给某人举个例子<br>z.B.  Kannst du mir ein Beispiel geben ?<br>但是我们也可以说：ein Beispiel anführen<br>z.B.  Er hat mir ein Beispiel angeführt.</p>
<h1 id="陈述句：der-Aussagesatz"><a href="#陈述句：der-Aussagesatz" class="headerlink" title="陈述句：der Aussagesatz"></a>陈述句：der Aussagesatz</h1><p>动词必须位于第二位<br>z.B.<br>Heute habe ich keine Zeit.<br>heute就是第一位，动词haben就在第二位<br>= Ich habe heute keine Zeit.</p>
<p>An diesem Wochenende gibt es einen Fotowettbewerb. ( der Fotobwettbewerb  摄影比赛 )<br>= Es gibt an diesem Wochenende einen Fotowettbewerb.</p>
<p>Anfang April werde ich in die USA fliegen.<br>解释：werden + 动词原形 ( 句末 )  第一将来时 Futur I；Anfang April / Mitte April / Ende April  四月初/中旬/末<br>= Ich werde Anfang April in die USA fliegen.</p>
<p>Zur Zeit ist die Luftqualität in China sehr schlecht.<br>解释：jetzt / im Moment / zur Zeit  目前；当下</p>
<p>Im Vergleich zu meiner Frau verdiene ich mehr Geld.  与我的妻子相比我赚的更多。<br>解释：im Vergleich zu D  与…相比</p>
<p>Im Anschluss an die Pressekonferenz wird ein Abendessen stattfinden.  在记者会之后开始晚餐。<br>解释：im Anschluss an A  紧接着…</p>
<p>Er hat sich dem Sportverein angeschlossen. ( der Sportverein  -e  体育俱乐部 ) 他加入了体育俱乐部。<br>Ich schließe mich deiner Meinung an.  我赞同你的观点。<br>解释：anschließen sich A etw. D  加入；赞同</p>
<p>Meiner Meinung nach sollst du diesen Job nicht annehmen.<br>解释：meiner Meinung nach  在我看来</p>
<h1 id="句框结构：Satzklammer"><a href="#句框结构：Satzklammer" class="headerlink" title="句框结构：Satzklammer"></a>句框结构：Satzklammer</h1><p>• 中场( das Mittelfeld )位置<br>TEKAMOLO   时间 / 原因 / 方式 / 地点<br>z.B.<br>    Ich möchte morgenfrüh mit der U-Bahn zur Arbeit fahren.  明天早上我打算坐地铁去上班。<br>    = Morgenfrüh möchte ich mit der U-Bahn zur Arbeit fahren.</p>
<pre><code>Wir müssen wegen starken Regens im Hotel bleiben.  由于雨下得很大我们必须待在宾馆。
= Wegen starken Regens müssen wir im Hotel bleiben.
vor/haben, etw. zu tun  打算做某事
Ich habe vor, morgenfrüh mit der U-Bahn zur Arbeit zu fahren.</code></pre><p>• 句首不占位<br>doch在句首是不占位的，解释为然而<br>z.B.<br>    Doch die Unterschiede zwischen den Bundesländern bleiben groß.  然而各个德国联邦州之间的差异依然很大。<br>    解释：der Unterschied  -e  区别，差异；unterscheiden A von D  把…与…区分开来</p>
<pre><code>Wichtige Fortschritte sind in den vergangenen Jahren zu beobachten, doch die Unterschiede zwischen den Bundesländern bleiben groß.  我们观察到过去这些年重要的进步，…

Die Chancen für Kinder im deutschen Schulsystem haben sich offenbar verbessert.  对孩子来说在德国教育体系的机会显然得到了改善。</code></pre><p>• sich在疑问句和从句中的位置：谁短谁在前<br>z.B.<br>    Ich habe schon gehört, dass sich die Chancen für Kinder im deutschen Schulsystem offenbar verbessert haben.<br>    Ich habe schon gehört, dass du dich für dieses neue Buch interessierst.<br>    Haben sich die Chancen für Kinder im deutschen System offenbar verbessert ?<br>    Interessierst du dich für dieses neue Buch ?</p>
<p>• 句首占位<br>allerdings  /  jedoch / trotzdem  都是句首占位词<br>z.B.<br>    Größter Exportkunde der deutschen Wirtschaft bleiben hingegen die USA.  相反的德国经济最大的出口客户依然是美国。<br>    解释：bleiben一格动词<br>    hingegen  相反的，表示对比关系，在句首也是占位的<br>    = Hingegen bleiben die USA größter Exportkunde der deutschen Wirtschaft.</p>
<p>• als破框结构<br>z.B.<br>    Die Arbeitslosigkeit ging damit stärker zurück als im Schnitt der vergangenen drei Jahre und erreichte den niedrigsten Februar-Wert seit 1991.<br>    失业下降得比过去三年的平均值厉害并且达到了自1991年2月份最低值。<br>    解释：zurück gehen  下降；im Schnitt 平均 = im Durchschnitt；erreichen + A  到达，达到；niedrig  低的；der Wert  数值</p>
<p>• 复杂例子<br>z.B.<br>    Laut aktuellen Zahlen des Statistischen Bundesamtes stieg die Zahl der Erwerbstätigen im Januar um 59.000 auf rund 43,59 Millionen.<br>    根据德国联邦统计署最新数据一月份有工作人数上升了59000人上升到4359000000人。<br>    解释：steigen:steigt  stieg  gestiegen ist；das Statistische Bundesamt  德国联邦统计署；laut + D  根据，按照；aktuell  最新的；der/die Erwerbstätige  有工作的人<br>    laut aktuellen Angaben der Bundespolizei  根据德国联邦警察最新说法<br>    laut aktuellen Daten der Vereinten Nationen  根据联合国最新数据 ( die Vereinten Nationen  联合国 )<br>    laut aktueller Statistik der EU  根据欧盟最新统计 ( die Statistik  统计数据 )<br>    erwerbstätig = berufstätig  反义词：arbeitslos<br>    um  差值；auf  上升到<br>    rund / etwa / ca. / knapp  大约</p>
]]></content>
      <categories>
        <category>学习</category>
        <category>德语学习 Deutschlernen</category>
      </categories>
      <tags>
        <tag>德语</tag>
      </tags>
  </entry>
  <entry>
    <title>搞笑老爸：家里遭贼啦</title>
    <url>/2020/05/10/funny-dad/</url>
    <content><![CDATA[<div class="note default">
            <p>最幸运的就是拥有老爸老妈，感谢带给我生命和思想。</p>
          </div>

<a id="more"></a>

<p>大早上打开手机准备玩宝可梦呢，就看到老爸发来的微信：<br><code>黄蓉昨晚睡着了家中来了贼，早上发现房门开着，检查你的笔记木电脑背盗了。其它没有损失，今后睡觉房门要反锁了。</code><br>？？？三脸问号，天呐！家里遭贼了，好担心老爸。等等……那台旧的笔记本不是老早被我卖了吗……（挠头</p>
<p>心里的第一反应是：爸爸老了。记性不行了，有点酸鼻子，但是想想他以为家里遭贼了，告诉我的语气又那么平静，就像一则通知，便又放下心来。晚上视频来问问吧。</p>
<p>玩了一上午宝可梦，罪过啊罪过！吃完饭，到视频的时间了！和老爸视频了十几分钟，全程真的是太搞笑了。</p>
<p>我  ：家里昨晚遭贼了？<br>老爸：你怎么都晓得了！！<br>我  ：你发微信和我说的 = =<br>老爸：哦哦！我都搞忘记了<br>我  ：电脑被偷了啊？<br>老爸：对！我早上起来一看，大门开着在，我看我窗台香烟，XX的银行卡，再跑到你房间一看！坏了你的笔记本没有了！贼不会白跑一趟的，肯定把笔记本顺走了。<br>我  ：按你性格你应该很难过啊老爸，你咋没反应？<br>老爸：我现在（钱）看开了，那个笔记本最多卖200块钱不。偷了就偷了。你隔壁大妈还让我报警哦，我赶着上班，没时间做笔录，肯定要耗掉我一上午，我还要去帮你姐开门。<br>……笑了许久。告诉老爸事实：那个旧笔记本电脑早被我卖啦！前年就卖了，三百块钱出掉了。<br>老爸：我要吃饭去了啊~不和你聊了。<br>哈哈哈哈哈哈</p>
<p>打字打到这里的时候发了一条朋友圈，记录这件心酸又搞笑的事。写不下去啦！今晚写代码写到现在，不想陷入感性又悲伤的情绪。人呐，快难过的时候就去睡觉吧，醒来又是开心的一天！</p>
<p>早点毕业，早点回家，陪老爸，这就是人生的意义。</p>
<p>醒来再看一眼这篇小记，”爸爸老了”加上”母亲节到了”，真是两颗催泪鱼雷。一边满脑子都是代码和项目，一边心里有总有一块感伤，矛盾中感到人作为社会动物，总是在被迫向前的无力感，对人生的感悟不过是”要开心”三个字。冥冥中都有注定吧，做个好人。</p>
]]></content>
      <categories>
        <category>生活</category>
        <category>所见所闻</category>
      </categories>
      <tags>
        <tag>老爸</tag>
      </tags>
  </entry>
  <entry>
    <title>Python将运行结果输出保存到csv文件中</title>
    <url>/2020/05/10/python-run-result-output-to-csv-file/</url>
    <content><![CDATA[<p>经常需要把运行结果写入到.txt或者.csv文件中，写了一个工具类可以把运行结果输出到csv文件中。很完整的工具类代码，可以直接用。</p>
<a id="more"></a>

<p>提供四个方法</p>
<ul>
<li>创建.csv文件</li>
<li>写入一行数据到.csv文件</li>
<li>从.csv文件读取打印到控制台</li>
<li>.txt文件转换写入到.csv文件<br>直接上代码了。</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">result_save</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_csv</span><span class="params">(self, path, titles)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        Create a csv file in the path</span></span><br><span class="line"><span class="string">        :param path: Path</span></span><br><span class="line"><span class="string">        :param titles: The first line of the csv file is the title of each column,</span></span><br><span class="line"><span class="string">        ['CP', 'PERSON_count', 'PERSON_percentage', 'PRODUCT_count', 'PRODUCT_percentage', 'EVENT_count', 'EVENT_percentage']</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="comment"># path = "../result/result.csv"</span></span><br><span class="line">        <span class="keyword">with</span> open(path, <span class="string">'w+'</span>, newline=<span class="string">''</span>) <span class="keyword">as</span> wf:</span><br><span class="line">            csv_write = csv.writer(wf)</span><br><span class="line">            csv_head = titles</span><br><span class="line">            csv_write.writerow(csv_head)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">write_csv</span><span class="params">(self, path, row)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        Write a line of data to a csv file</span></span><br><span class="line"><span class="string">        :param path: Path</span></span><br><span class="line"><span class="string">        :param row: A line of data,</span></span><br><span class="line"><span class="string">        ['..\\corpus\\W99-0632word.docx.txt', '110', '18.93%', '7', '1.20%', '2']</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">with</span> open(path, <span class="string">'a+'</span>, newline=<span class="string">''</span>) <span class="keyword">as</span> wf:</span><br><span class="line">            csv_write = csv.writer(wf)</span><br><span class="line">            <span class="comment"># list</span></span><br><span class="line">            data_row = row</span><br><span class="line">            csv_write.writerow(data_row)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">read_csv</span><span class="params">(self, path)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        Read a csv file, the separator is a comma</span></span><br><span class="line"><span class="string">        :param path: Path</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">with</span> open(path, <span class="string">"r+"</span>) <span class="keyword">as</span> rf:</span><br><span class="line">            csv_read = csv.reader(rf, delimiter=<span class="string">','</span>)</span><br><span class="line">            <span class="keyword">for</span> line <span class="keyword">in</span> csv_read:</span><br><span class="line">                print(line)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">txt2csv</span><span class="params">(self, txt_path, csv_path)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        Convert a txt text to a csv file</span></span><br><span class="line"><span class="string">        :param txt_path: txt text path</span></span><br><span class="line"><span class="string">        :param csv_path: csv file path</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">with</span> open(txt_path, <span class="string">"r+"</span>) <span class="keyword">as</span> rf:</span><br><span class="line">            doc = csv.reader(rf)</span><br><span class="line">            <span class="keyword">with</span> open(csv_path, <span class="string">'a+'</span>, newline=<span class="string">''</span>) <span class="keyword">as</span> wf:</span><br><span class="line">                out_csv = csv.writer(wf)</span><br><span class="line">                out_csv.writerows(doc)</span><br></pre></td></tr></table></figure>

<p>多说几句，感谢上学期带我的德国大腿，让我感受到代码解耦的快乐。这是一种代码思维，不要在一个文件里既写读取文件，处理数据，又写输出数据等等。可以把文件处理抽出一个工具类，能重复的逻辑代码抽出一个类，这样主类调用他们，逻辑结构更加清晰。</p>
]]></content>
      <categories>
        <category>学习</category>
        <category>自然语言处理 NLP</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>工具类</tag>
      </tags>
  </entry>
  <entry>
    <title>学习NLP用Python编程过程中遇到的问题和解决方案</title>
    <url>/2020/05/10/python-in-nlp-notes/</url>
    <content><![CDATA[<p>这学期一门课是自然语言处理，语言用的Python。这篇记录和总结学习过程中遇到的不会的东西，方便自己日后查看。NLP问题Python编程全部是自己从头学，理论课也就那样吧，听懂个50%。如果有和我一样从头自学NLP的，也许能在这篇中找到自己需要的编程技巧和代码思路。</p>
<a id="more"></a>

<h1 id="Pycharm在创建-py文件时，自动添加文件头注释"><a href="#Pycharm在创建-py文件时，自动添加文件头注释" class="headerlink" title="Pycharm在创建.py文件时，自动添加文件头注释"></a>Pycharm在创建.py文件时，自动添加文件头注释</h1><p>打开PyCharm，在File-&gt;Settings-&gt;Editor-&gt;File and Code Templates-&gt;Python Script里面</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># encoding: utf-8</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">@author: xxx</span></span><br><span class="line"><span class="string">@contact: xxx@xxx.com</span></span><br><span class="line"><span class="string">@software: pycharm</span></span><br><span class="line"><span class="string">@file: $&#123;NAME&#125;.py</span></span><br><span class="line"><span class="string">@time: $&#123;DATE&#125; $&#123;TIME&#125;</span></span><br><span class="line"><span class="string">@desc:</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure>

<h1 id="类和方法注释规范"><a href="#类和方法注释规范" class="headerlink" title="类和方法注释规范"></a>类和方法注释规范</h1><p>直接上代码了。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">method</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Beschreibung</span></span><br><span class="line"><span class="string">    :param path: </span></span><br><span class="line"><span class="string">    :return: </span></span><br><span class="line"><span class="string">    """</span></span><br></pre></td></tr></table></figure>

<h1 id="Python如何实例化类并调用方法"><a href="#Python如何实例化类并调用方法" class="headerlink" title="Python如何实例化类并调用方法"></a>Python如何实例化类并调用方法</h1><p>创建一个.py文件，类A</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_A</span><span class="params">(self)</span>:</span></span><br><span class="line">        a = <span class="number">0</span></span><br><span class="line">        <span class="keyword">return</span> a</span><br></pre></td></tr></table></figure>
<p>然后在另一个.py文件中，实例化类A并调用方法get_A()</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> src.A <span class="keyword">import</span> A</span><br><span class="line">A().get_A()</span><br></pre></td></tr></table></figure>
<p>这样就行了。</p>
<h1 id="Python中如何打印小数点后显示两位的百分数"><a href="#Python中如何打印小数点后显示两位的百分数" class="headerlink" title="Python中如何打印小数点后显示两位的百分数"></a>Python中如何打印小数点后显示两位的百分数</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">percentage = <span class="string">'&#123;:.2%&#125;'</span>.format(a / b)</span><br></pre></td></tr></table></figure>
<p>注意如果a是0的话会报”被零除”错误[ZeroDivisionError: division by zero]<br>解决办法是</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">global</span> per_value</span><br><span class="line">    per_value = a / b</span><br><span class="line"><span class="keyword">except</span> ZeroDivisionError:</span><br><span class="line">    z = <span class="number">0</span></span><br><span class="line">percentage = <span class="string">'&#123;:.2%&#125;'</span>.format(per_value)</span><br></pre></td></tr></table></figure>
<p>注意这里per_value是局部变量，把它变成全局变量在下面调用的时候才不会报错。否则出现”分配前引用的局部变量”错误：[Error: local variable referenced before assignment]</p>
<h1 id="Python中写入文本到-txt文件"><a href="#Python中写入文本到-txt文件" class="headerlink" title="Python中写入文本到.txt文件"></a>Python中写入文本到.txt文件</h1><p>两种方式：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(txt, file=wf) <span class="comment"># 自动换行</span></span><br><span class="line">wf.write(txt) <span class="comment"># 没有换行</span></span><br></pre></td></tr></table></figure>

<h1 id="Python中读取文件显示字符集错误"><a href="#Python中读取文件显示字符集错误" class="headerlink" title="Python中读取文件显示字符集错误"></a>Python中读取文件显示字符集错误</h1><p>给error参数传参’ignore’来解决，最方便。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">with</span> open(file, <span class="string">'r'</span>, errors=<span class="string">'ignore'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    doc = nlp(f.read())</span><br></pre></td></tr></table></figure>

<h1 id="Python中整数转换字符串"><a href="#Python中整数转换字符串" class="headerlink" title="Python中整数转换字符串"></a>Python中整数转换字符串</h1><p>直接<code>str(89)</code>解决。</p>
<h1 id="Python中获取给定路径的文件夹中所有文件的文件路径"><a href="#Python中获取给定路径的文件夹中所有文件的文件路径" class="headerlink" title="Python中获取给定路径的文件夹中所有文件的文件路径"></a>Python中获取给定路径的文件夹中所有文件的文件路径</h1><p>直接上完整代码了，可以直接当工具类使用。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">files_bp</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_all_filepath</span><span class="params">(self, path_to_files)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        Get all path of files in a folder</span></span><br><span class="line"><span class="string">        :param path_to_files: Destination folder path</span></span><br><span class="line"><span class="string">        :return: A list containing the paths of all files in this folder, excluding subfolders in this folder</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line"></span><br><span class="line">        all_files = os.listdir(path_to_files)</span><br><span class="line">        list_filepath = []</span><br><span class="line">        <span class="keyword">for</span> file <span class="keyword">in</span> all_files:</span><br><span class="line">            <span class="keyword">if</span> os.path.isfile(os.path.join(path_to_files, file)):</span><br><span class="line">                list_filepath.append(os.path.join(path_to_files, file))</span><br><span class="line">        <span class="keyword">return</span> list_filepath</span><br></pre></td></tr></table></figure>

<h1 id="Python写入-csv文件的时候总是多一行空行"><a href="#Python写入-csv文件的时候总是多一行空行" class="headerlink" title="Python写入.csv文件的时候总是多一行空行"></a>Python写入.csv文件的时候总是多一行空行</h1><p>解决方法，直接在打开文件时添加一句代码<code>newline=&#39;&#39;</code>，如下</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">with</span> open(path, <span class="string">'a+'</span>, newline=<span class="string">''</span>) <span class="keyword">as</span> wf:</span><br><span class="line">    ……</span><br></pre></td></tr></table></figure>

<h1 id="with-open打开文件，不需要再f-close"><a href="#with-open打开文件，不需要再f-close" class="headerlink" title="with open打开文件，不需要再f.close()"></a>with open打开文件，不需要再f.close()</h1><p>使用<code>with open(path, &#39;r&#39;) as f:</code>打开文件就不需要再关闭打开的文件流了。<br>传统的方式<code>open(path,&#39;w&#39;)</code>在逻辑代码结束后，记得关闭已打开的文件。</p>
]]></content>
      <categories>
        <category>学习</category>
        <category>自然语言处理 NLP</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>NLP</tag>
      </tags>
  </entry>
  <entry>
    <title>每周德语语法：德语四格总结</title>
    <url>/2020/05/16/deutschlernen-grammatik-kasus/</url>
    <content><![CDATA[<div class="note default">
            <ul><li>der Nominativ  第一格</li><li>der Genitiv  第二格</li><li>der Dativ  第三格</li><li>der Akkusativ  第四格</li></ul>
          </div>

<a id="more"></a>

<ol>
<li><p>der Nominativ  第一格</p>
<p> 1) 用法一：第一格担任句子的主语：Subjekt<br> z.B.</p>
<pre><code>Mein Vater spricht gut Deutsch.
Mein Bruder hat eine neue Freundin. ( der Bruder  兄弟 )
Ihr Mann kommt aus der Schweiz. ( der Mann  男人 )

①. wer
Wer hat dir das Restaurant empfohlen ?
解释：wer是第一格的谁，只能担任主语，且后面动词用第三人称单数形式。empfehlen jm. D etw. A  给某人推荐某物  empfohlen haben

②. 不定代词，担任主语，后面动词使用第三人称单数
• man泛指人们
In dieser Stadt muss man sehr fleißig arbeiten.

• jeder每个人
Jeder ist verpflichtet, die Umwelt zu schützen.  每个人都有义务去保护环境。
解释：verpflichtet sein, etw. zu tun  有义务做某事

• niemand / keiner没有人
Niemand / Keiner darf die Gesetze brechen.  没有人被允许违反法律。
解释：das Gesetz  -e  法律  brechen  打破；违背

• jemand某个人
Jemand klopft an der Tür. =  Jemand klopft.  某个人在敲门。

③. es
• 具体的天气现象使用主语es
Es hat den ganzen Tag geregnet.  ( regnen 下雨 )

• es还可以担任形式主语
Es ist wichtig, jeden Tag Sport zu treiben/machen.

es除了指代带zu不定式，还可以指代一个dass从句
Es ist mir unglaublich, dass du diese Prüfung bestanden hast.  对我来说你通过考试是不可思议的。</code></pre><p> 2) 用法二：第一格还可以担任表语，表语就是跟在系动词之后的内容，德语系动词sein / werden / bleiben</p>
<pre><code>①. sein
Er ist ein fleißiger Student.
Das ist sein zweites Auto.  这是他的第二辆车。

• 度量衡单位里面，ist后面跟第四格，只是有时看不出来，在1的时候看出来
z.B.
    Der Tisch ist zwei Meter hoch.  ( Meter是复数，看不出来 )
    Der Tisch ist einen Meter hoch.  ( 立马看出来了 )
    Der Tisch ist einen Meter breit.  这个桌子一米宽。

    Das Baby ist zwei Monate alt.  看不出来
    Das Baby ist einen Monat alt.  看出来

②. werden
Er ist ein berühmter Zahnarzt geworden.  他想成为一名著名的牙医。

③. bleiben
Er bleibt ein berühmter Zahnarzt.  他依然是一位著名的牙医。</code></pre></li>
<li><p>der Akkusativ  第四格</p>
<p> 1) 用法一：德语中海量的动词接第四格，必须记住<br> lieben + A  爱<br> z.B.</p>
<pre><code>Ich liebe dich.  我爱你。

Ich liebe den romantischen Mann.
Welchen Mann liebst du ?
Ich liebe einen Ausländer. ( der Ausländer  外国男人 )

Ich liebe meine Heimat. ( die Heimat  故乡；家乡 )
Ich liebe die/diese Stadt. ( die Stadt  城市 )
Ich liebe unsere Kinder.</code></pre><p> sehen + A  看见<br> z.B.</p>
<pre><code>Ich habe einen attraktiven Mann gesehen.</code></pre><p> an/rufen + A  给某人打电话<br> z.B.</p>
<pre><code>Gestern hat er seinen Vater angerufen.</code></pre><p> verlassen + A  离开<br> z.B.</p>
<pre><code>Sie hat ihre Heimat verlassen.</code></pre><p> brauchen + A  需要<br> z.B.</p>
<pre><code>Ich brauche einen Liter Milch. ( der Liter  升 )</code></pre><p> kosten + A  花费   双四格动词，人和钱都是第四格<br> z.B.</p>
<pre><code>Der Kuli kostet einen Euro. ( der Euro  欧元 ) 这支圆珠笔花费了一欧元。
Der Kuli kostet mich einen Euro.
Der Fernseher hat ihn 200 Euro gekostet.</code></pre><p> vergessen + A  忘记<br> z.B.</p>
<pre><code>Er hat mein Adresse vergessen. ( die Adresse  -n  地址 )
Er hat meinen Namen vergessen.
解释：der Name  阳性弱变化  -n</code></pre><p> 2) 用法二：第四格担任时间状语<br> jeden Tag  每天   词尾就是第四格<br> z.B.</p>
<pre><code>Jeden Tag dusche ich mich zweimal.  我每天洗两次澡。</code></pre><p> jede Woche  每个星期   die Woche  星期<br> z.B.</p>
<pre><code>Jede Woche besucht er seine Eltern.  ( besuchen + A  拜访 )</code></pre><p> jeden Monat  每月   der Monat  -e  月<br> z.B.</p>
<pre><code>Ich verdiene jeden Monat 2000 Euro. = Jeden Monat verdiene ich 2000 Euro.
= Monatlich verdiene ich 2000 Euro.  我每个月挣2000欧。

jedes Jahr  每年   das Jahr  年</code></pre><p> z.B.</p>
<pre><code>Jedes Jahr fahren wir mit dem Zug in die Schweiz.</code></pre><p> letztes Jahr  去年<br> z.B.</p>
<pre><code>Letztes Jahr waren wir in Berlin.  去年我们在柏林。</code></pre><p> nächstes Jahr  明年<br> z.B.</p>
<pre><code>Nächstes Jahr werde ich in die USA fliegen.  明年我将飞往美国。</code></pre><p> letzte Woche  上周   die Woche  星期<br> z.B.</p>
<pre><code>Letzte Woche habe ich mich mit meinen Freunden getroffen.
解释：treffen sich A mit D  与...约见</code></pre><p> nächste Woche  下周<br> z.B.</p>
<pre><code>Nächste Woche haben wir eine wichtige Prüfung.  下周我们有一场重要的考试。</code></pre><p> den ganzen Tag  一整天 ( 就是第四格 )<br> z.B.</p>
<pre><code>Heute habe ich den ganzen Tag am Computer gearbeitet.  我今天一整天都在电脑前工作。</code></pre><p> den ganzen Monat  整月<br> z.B.</p>
<pre><code>Ich muss den ganzen Monat im Bett bleiben/liegen.  我整个月都必须卧床休息。</code></pre><p> die ganze Woche  整周<br> z.B.</p>
<pre><code>Ich bin die ganze Woche in Berlin.</code></pre><p> das ganze Jahr  一整年<br> z.B.</p>
<pre><code>Ich weiß nicht, was er das ganze Jahr gemacht hat.  我不知道，他这一整年干了什么。</code></pre><p> 3) 用法三： 人三物四和人三人四，双宾动词<br> kaufen + jm.D + A  买<br> z.B.</p>
<pre><code>Er hat mir einen neuen Computer gekauft.</code></pre><p> vor/lesen + jm.D + A  朗读<br> z.B.</p>
<pre><code>Die Mutter hat dem Kind ein Märchen vorgelesen. ( das Märchen  童话 )</code></pre><p> vorstellen + jm.D + jn.A  介绍<br> z.B.</p>
<pre><code>Sie hat uns ihren Mann vorgestellt.</code></pre><p> empfohlen + jm.D + A  推荐<br> z.B.</p>
<pre><code>Johnson hat mir eine bessere Lehrerin empfohlen.</code></pre><p> 4) 用法四：六大介词跟第四格  für  gegen  um  ohne  durch  über ( 关于 )<br> z.B.</p>
<pre><code>Für seine Freundin arbeitet er jeden Tag sehr hart.
Er hat für einen neuen Computer gespart. ( sparen  节约 )

Ich bin gegen deine Meinung/Ansicht.

Die Erde dreht sich um die Sonne.  ( drehen sich A um A  围绕 )
In dieser Grafik geht es um die Lieblingshobbys der Deutschen.  这个图表中涉及到德国人最喜欢的兴趣爱好。

Nach dem Essen haben wir über das neue Projekt diskutiert.</code></pre><p> 5) 用法五：静三动四的动四，表示位置改变，介词后面第四格<br> setzen sich A  坐到…去<br> z.B.</p>
<pre><code>Sie hat sich hinter ihren Mann gesetzt.</code></pre><p> kleben an + A  贴到…上去<br> z.B.</p>
<pre><code>Er hat den Zettel an die Tür geklebt. ( der Zettel  纸条   kleben  黏贴 )</code></pre><p> stellen unter + A  放到…下面去<br> z.B.</p>
<pre><code>Ich habe das Handy unter die Zeitung gestellt.</code></pre></li>
<li><p>der Dativ  第三格</p>
<p> 1) 用法一：一些动词后面必须使用第三格<br> danken  感谢某人<br> z.B.</p>
<pre><code>Ich danke dir. = Danke.
Ich danke meinen Eltern.
Ich danke Herrn Wang für die Einladung.
解释：Herr是阳性弱变化，第三格时加词尾n</code></pre><p> gratulieren jm.D zu D  祝贺某人某事<br> z.B.</p>
<pre><code>Wir haben ihm zum Geburtstag gratuliert.</code></pre><p> glauben + D  相信某人<br> z.B.</p>
<pre><code>Niemand glaubt mir.
Ich glaube meinem Mann.
Glaub mir !  Glauben Sie mir !  Glaubt mir !  请(你/您/你们)相信我！</code></pre><p> gelingen  + D  某人(D)做成某事(N)  ( 某人是第三格 )   gelingt   gelang  ist gelugnen<br> z.B.</p>
<pre><code>Das gelingt mir.  Das gelang mir.  Das ist mir gelungen.

• Es ist jm.D gelungen, etw. zu tun.  某人成功做成某事
Es ist mir gelungen, meine Eltern zu überzeugen.  我成功说服了我的父母。
解释：überzeugen + A  说服某人
Es ist ihm gelungen, dieses Problem zu lösen.  他成功解决了问题。</code></pre><p> gelingen的反义词：misslingen + D  失败；不成功  ( 某人还是第三格 )<br> z.B.</p>
<pre><code>Der Versucht misslingt mir. / Der Versuch ist mir misslungen.  这次尝试我失败了。

• Es ist jm.D misslungen, etw. zu tun.  某人没有做成某事
Es ist meinem Vater misslungen, dieses Problem zu lösen.</code></pre><p> vertrauen + D  信任某人  misstrauen + D  不信任<br> z.B.</p>
<pre><code>Wir vertrauen unserem Lehrer. / Wir misstrauen unserem Lehrer.</code></pre><p> gehören  + D 属于某人</p>
<p> passen / stehen / sitzen + D  合适某人<br> z.B.</p>
<pre><code>Das Hemd steht mir gut.
Das Kleid sitzt ihr gut.</code></pre></li>
</ol>
]]></content>
      <categories>
        <category>学习</category>
        <category>德语学习 Deutschlernen</category>
      </categories>
      <tags>
        <tag>德语</tag>
      </tags>
  </entry>
</search>
